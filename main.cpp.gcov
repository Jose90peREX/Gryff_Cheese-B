        -:    0:Source:main.cpp
        -:    1:#include <cstdio>
        -:    2:#include <vector>
        -:    3:#include <numeric>
        -:    4:#include <random>
        -:    5:#include <chrono>
        -:    6:#include "quickSort.h"
        -:    7:#include "SelectionSort.h"
        -:    8:#include <algorithm>
        -:    9:using namespace std;
        -:   10:using namespace chrono;
        -:   11:
        -:   12://Benchmarking:
        -:   13:template <typename T>
        8:   14:void RunTimedTest(const string& test_name, T&& function) {
        8:   15:    auto start = high_resolution_clock::now();
        8:   16:    function();
        8:   17:    auto end = high_resolution_clock::now();
        8:   18:    auto duration = duration_cast<milliseconds>(end-start);
        8:   19:    cout << "[TIME] " << test_name << ": " << duration.count() << "\n";
        8:   20:}
        -:   21:
        8:   22:int main() {
        8:   23:    vector<int> testVec(10000);
        8:   24:    iota(testVec.begin(), testVec.end(), 1);
        -:   25:
        8:   26:    std::random_device rd;
        8:   27:    std::mt19937 r(rd());
        -:   28:
        8:   29:    RunTimedTest("Selection Sort", [&]() {
        8:   30:        vector<int> copyTest = testVec;
        8:   31:        shuffle(copyTest.begin(), copyTest.end(), r);
        8:   32:        selectionSort(copyTest.data(), testVec.size()-1);
        8:   33:    });
        -:   34:
        8:   35:    return 0;
        8:   36:}
