        -:    0:Source:insertionSort_HeapSort_test.cpp
        -:    0:Graph:input_tester-insertionSort_HeapSort_test.gcno
        -:    0:Data:input_tester-insertionSort_HeapSort_test.gcda
        -:    0:Runs:1
        -:    1:#include "gtest/include/gtest/gtest.h"
        -:    2:#include "HeapSort.h"
        -:    3:#include "InsertionSort.h"
        -:    4:#include <vector>
        -:    5:#include <random>
        -:    6:#include <algorithm>
        -:    7:
        -:    8:using namespace std;
        -:    9:
        1:   10:vector<int>generateRandomNumber(int size, int minVal = 1, int maxVal = 100){
        -:   11: 
        1:   12:	random_device rd;
        -:   13:	mt19937 gen(rd());
        -:   14:	uniform_int_distribution<> dist(minVal, maxVal);
        -:   15:
        1:   16:	vector<int> v(size);
        -:   17:	generate(v.begin(), v.end(), [&]() {return dist(gen);});
        1:   18:	return v;
        -:   19:
        -:   20:}
        -:   21:
       3*:   22:TEST(HeapSortTest, RandomNumbersTest){
        -:   23:   int size = 10;
        1:   24:   vector<int> v = generateRandomNumber(size);
        1:   25:   vector<int> expected = v;
        -:   26:   
        -:   27:   Heap heap;
        1:   28:   heap.ascendingHeapSort(v.data(), v.size());
        1:   29:   sort(expected.begin(), expected.end());
       1*:   30:   ASSERT_EQ(v, expected);
        -:   31:}
        -:   32:
        -:   33:
        -:   34:
